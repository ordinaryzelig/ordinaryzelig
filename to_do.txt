rescue bad urls
    http://media.railscasts.com/ipod_videos/046_catch_all_route.m4v
        routes -> map.connect to new controller which will determine if controller exists, if it does, redirect to index action.  otherwise, redirect to welcome page.
    or use rescue_action?

what is ordinary zelig?

log request uris

action mailer
   new user confirmation?
   errors
   new items

summarize_max doesn't work when :what option is a self-defined proc.

don't care
   about this person's <entity>.
   about these movie_rating_types.

grow sidebar when moused over?

rename pool controller to march_madness

one_line_summary
   for
      blog list
      movie_review
      recent comments in summary

last time user checked recents.
   create table and insert types.
   create new table in website schema
   import
      insert into website.user_activities (user_id, user_activity_type_id, last_action_at, previous_action_at)
      select
         user_id,
         1,
         last_login_at,
         previous_login_at
      from
         users.user_activities;
   drop table users.user_activities;
   alter models and views

convert recent_entities to a column in entities table is_recent_entity_type.

has_recency option and user preference to show new movies from everyone, not just users.

migrate
   update users.users set is_admin = 0 where is_admin is null;
   dump and backup
   lib/active_record/connection_adapters/postgresql_adapter.rb
      scehams = schema_search_path.split(/\s*,\s*/).map { |p| quote(p) }.join(',')
   schema_search_path: march_madness,users,message_board,blogs,entities,comments,website
   rake extract_fixtures
   schema_search_path: website
   if on lgs056: drop/create database/schema.
   rake db:migrate
   alter table website.games drop constraint games_parent_id_fkey;
   alter table website.comments drop constraint comments_parent_id_fkey;
   rake db:fixtures:load FIXTURES='users,friendships,user_activities,seasons,regions,rounds,teams,games,pool_users,bids,pics,accounts,entity_types,recent_entity_types,messages,blogs,movies,movie_rating_types,movie_rating_options,movie_ratings,comments,comment_groups'
   rake db:migrate
